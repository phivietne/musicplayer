<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music player</title>
    <link rel="stylesheet" href="/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css"
        integrity="sha512-HK5fgLBL+xu6dm/Ii3z4xhlSUyZgTT9tuc/hSrtw6uzJOvgRr2a9jyxxT1ely+B+xFAmJKVSTbpM/CuL7qxO8w=="
        crossorigin="anonymous" />
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <!-- <script src="https://code.jquery.com/jquery-3.5.0.js"></script> -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
</head>

<body>
    <div class="player">
        <!-- Dashboard -->
        <div class="dashboard">
            <!-- Header -->
            <header>
                <h4>Now playing:</h4>
                <h2>String 57th & 9th</h2>
            </header>

            <!-- CD -->
            <div class="cd">
                <div class="cd-thumb"
                    style="background-image: url('https://i.ytimg.com/vi/jTLhQf5KJSc/maxresdefault.jpg')">
                </div>
            </div>

            <!-- Control -->
            <div class="control">
                <div class="btn btn-repeat">
                    <i class="fas fa-redo"></i>
                </div>
                <div class="btn btn-prev">
                    <i class="fas fa-step-backward"></i>
                </div>
                <div class="btn btn-toggle-play">
                    <i class="fas fa-pause icon-pause"></i>
                    <i class="fas fa-play icon-play"></i>
                </div>
                <div class="btn btn-next">
                    <i class="fas fa-step-forward"></i>
                </div>
                <div class="btn btn-random">
                    <i class="fas fa-random"></i>
                </div>
            </div>

            <input id="progress" class="progress" type="range" value="0" step="1" min="0" max="100">

            <audio id="audio" src=""></audio>
        </div>

        <!-- Playlist -->
        <div class="playlist">


        </div>
        <!-- <img src="./img/img1.jpg" alt=""> -->
    </div>
    <script>
        const $ = document.querySelector.bind(document);
        const $$ = document.querySelectorAll.bind(document);

        const PLAYER_STORAGE_KEY='MUSIC PLAYER'    
        const heading = $('header h2');
        const playlist = $('.playlist');
        const cdThumb = $('.cd-thumb');
        const audio = $('#audio');
        const cd = $('.cd');
        const playBtn = $('.btn-toggle-play');
        const player = $('.player');
        const progress = $('#progress');
        const nextBtn = $('.btn-next');
        const prevBtn = $('.btn-prev');
        const randomBtn = $('.btn-random')
        const repeatBtn = $('.btn-repeat')

        const app = {
            currentIndex: 0,
            isPlaying: false,
            isRandom: false,
            isRepeat: false,
            config:JSON.parse(localStorage.getItem(PLAYER_STORAGE_KEY))||{},
            
            songs: [
                {
                    name: 'Oh My Way',
                    singer: "Alan Wake",
                    path: './audio/1.mp3',
                    image: './img/img1.jpg'
                },
                {
                    name: 'Alan Waker-Fade',
                    singer: "Alan Waker",
                    path: './audio/2.mp3',
                    image: './img/img2.jpg'

                },
                {
                    name: 'On & On',
                    singer: "Electro Light",
                    path: './audio/3.mp3',
                    image: './img/img3.jpg'
                }
                ,
                {
                    name: 'Warriko',
                    singer: "Mortals",
                    path: './audio/4.mp3',
                    image: './img/img4.jpg'
                },
                {
                    name: 'Hello',
                    singer: "Adele",
                    path: './audio/5.mp3',
                    image: './img/img5.jpg'
                }
                ,
                {
                    name: 'Symbolism',
                    singer: "Electro Light",
                    path: './audio/6.mp3',
                    image: './img/img6.jpg'
                }
                ,
                {
                    name: 'See You Again',
                    singer: "Wiz Khalifa",
                    path: './audio/7.mp3',
                    image: './img/img7.jpg'
                }
                ,
                {
                    name: 'Shape Of You',
                    singer: "Ed Sheeran",
                    path: './audio/8.mp3',
                    image: './img/img8.jpg'
                }
                ,
                {
                    name: 'Learn On',
                    singer: "Major Lazer",
                    path: './audio/9.mp3',
                    image: './img/img9.jpg'
                }
                ,
                {
                    name: 'Closer',
                    singer: "The Chainsmokers",
                    path: './audio/10.mp3',
                    image: './img/img10.jpg'
                }
                ,
                {
                    name: 'This Is What You Came For',
                    singer: "Calvin Harris",
                    path: './audio/11.mp3',
                    image: './img/img11.jpg'
                }
                ,
                {
                    name: 'Work Form Home',
                    singer: "Fift Harmony",
                    path: './audio/12.mp3',
                    image: './img/img12.jpg'
                }
                ,
                {
                    name: 'Rockabye',
                    singer: "Clean Bandit",
                    path: './audio/13.mp3',
                    image: './img/img13.jpg'
                }
                ,
                {
                    name: 'Work It',
                    singer: "Fifth Harmony",
                    path: './audio/14.mp3',
                    image: './img/img14.jpg'
                }
                ,
                {
                    name: 'We Dont Talk Anymore',
                    singer: "Charlie Puth",
                    path: './audio/15.mp3',
                    image: './img/img15.jpg'
                }
            ],
            setConfig:function(key,value){
                this.config[key]=value;
                localStorage.setItem(PLAYER_STORAGE_KEY, JSON.stringify(this.config))
            },
            render: function () {
                const htmls = this.songs.map((song, index) => {
                    return `
                    <div class="song ${index === this.currentIndex ? 'active' : ''}" data-index="${index}">
                        <div class="thumb" style="background-image: url('${song.image}')">
                        </div>
                        <div class="body">
                          <h3 class="title">${song.name}</h3>
                           <p class="author">${song.singer}</p>
                        </div>
                        <div class="option">
                            <i class="fas fa-ellipsis-h"></i>
                        </div>
                    </div>
                    `
                })
                playlist.innerHTML = htmls.join('')
            },
            defineProperties: function () {
                Object.defineProperty(this, 'currentSong', {
                    get: function () {
                        return this.songs[this.currentIndex]
                    }
                })
            },
            handEvents: function () {
                _this = this;
                const cdWidth = cd.offsetWidth
                //Xử lý cd quay và dừng
                const cdThumbAnimate = cdThumb.animate([
                    {
                        transform: 'rotate(360deg)'
                    }
                ], {
                    duration: 100000,//100s
                    interations: Infinity //lặp vô hạn
                })
                
                cdThumbAnimate.pause();

                //xử lý phóng to thu nhỏ CD
                document.onscroll = function () {
                    const scrollTop = window.scrollY || document.documentElement.scrollTop;
                    const newCdWidth = cdWidth - scrollTop
                    cd.style.width = newCdWidth > 0 ? newCdWidth + 'px' : 0;
                    cd.style.opacity = newCdWidth / cdWidth;
                }
                //xử lý khi click play
                playBtn.onclick = function () {
                    if (_this.isPlaying) {
                        audio.pause();
                    }
                    else {
                        audio.play();
                    }
                }
                audio.onplay = function () {
                    _this.isPlaying = true;
                    player.classList.add('playing');
                    cdThumbAnimate.play();
                }
                audio.onpause = function () {
                    _this.isPlaying = false;
                    player.classList.remove('playing');
                    cdThumbAnimate.pause();
                }
                //khi tiến độ bài hát thay đổi 
                audio.ontimeupdate = function () {
                    if (audio.duration) {
                        const progressPercent = Math.floor(audio.currentTime/ audio.duration * 100)
                        progress.value = progressPercent;
                    }
                }
                //tua
                progress.onchange = function (e) {
                    const seektime = audio.duration / 100 * e.target.value;
                    audio.currentTime = seektime
                }
                //Khi next 
                nextBtn.onclick = function () {
                    if (_this.isRandom) { _this.playRandom() }
                    else {
                        _this.nextSong();
                    }
                    audio.play();
                    _this.render();
                    _this.scrollToActiveSong()
                }
                prevBtn.onclick = function () {
                    if (_this.isRandom) { _this.playRandom() }
                    else {
                        _this.prevSong();
                    }
                    audio.play();
                    _this.render();
                    _this.scrollToActiveSong()

                }
                //Xử lý random bật tắt
                randomBtn.onclick = function (e) {
                    _this.isRandom = !_this.isRandom,
                    _this.setConfig('isRandom',_this.isRandom)
                    randomBtn.classList.toggle('active', _this.isRandom)
                }
                //xử lý khi repeat bật tắt
                repeatBtn.onclick = function (e) {
                    _this.isRepeat = !_this.isRepeat,
                    _this.setConfig('isRepeat',_this.isRepeat)
                    repeatBtn.classList.toggle('active', _this.isRepeat)
                }
                //xử lý next khi audio ended
                audio.onended = function () {
                    if (_this.isRepeat) {
                        audio.play();
                    }
                    else
                        nextBtn.click();
                }
                //lắng nghe hành vi click vào play list
                playlist.onclick = function (e) {
                    const songNode=e.target.closest('.song:not(.active)');

                    if (songNode||e.target.closest('.option')) {
                        if (songNode){
                           _this.currentIndex=Number(songNode.getAttribute('data-index'))
                           _this.loadCurrentSong()
                           _this.render()
                           audio.play()
                        }
                    }
                }

            },
            scrollToActiveSong() {
                setTimeout(() => {
                    $('.song.active').scrollIntoView({
                        behavior: 'smooth',
                        block: 'nearest'
                    })

                }, 300)
            },

            loadCurrentSong: function () {

                heading.textContent = this.currentSong.name
                cdThumb.style.backgroundImage = `url('${this.currentSong.image}')`;
                audio.src = this.currentSong.path;

            },
            loadConfig:function(){
                this.isRandom=this.config.isRandom
                this.isRepeat=this.config.isRepeat

            },
            nextSong: function () {
                this.currentIndex++;
                if (this.currentIndex >= this.songs.length) {
                    this.currentIndex = 1
                }
                this.loadCurrentSong()
            },
            prevSong: function () {
                this.currentIndex--;
                if (this.currentIndex < 0) {
                    this.currentIndex = this.songs.length - 1
                }
                this.loadCurrentSong()
            },
            playRandom: function () {
                let newIndex;
                do {
                    newIndex = Math.floor(Math.random() * this.songs.length)
                } while (newIndex === this.currentIndex)
                this.currentIndex = newIndex;
                this.loadCurrentSong()
            },
            start: function () {
                // this.loadConfig()
                //định nghĩa các thuộc tính cho object
                this.defineProperties()
                //lắng nghe và xử lý các dom event
                this.handEvents()
                //tải thông tin bài hát đầu tiên vào UI khi chạy ứng dụng 
                this.loadCurrentSong()
                //render lại playlisst
                this.render()
            }
        }
        app.start();
    </script>
</body>

</html>